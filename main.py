# Career Guidance Form using Streamlit
import streamlit as st

# Page Configuration
st.set_page_config(page_title="‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡∏≠‡∏≤‡∏ä‡∏µ‡∏û", page_icon="üéì", layout="centered")

# Title and description
st.title("‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡∏≠‡∏≤‡∏ä‡∏µ‡∏û")
st.write("""
‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡∏ó‡∏±‡∏Å‡∏©‡∏∞ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à ‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÉ‡∏ô‡∏ù‡∏±‡∏ô 
‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÇ‡∏î‡∏¢ ChatGPT (‡∏à‡∏≥‡∏•‡∏≠‡∏á) 
""")

# OpenAI API Key Input
api_key_input = st.text_input(
    label="‡πÉ‡∏™‡πà OpenAI API Key (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)", 
    placeholder="‡∏Å‡∏£‡∏≠‡∏Å API Key ‡∏Ç‡∏≠‡∏á OpenAI ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà", 
    type="password",
    key="openai_api_key"
)

# Career Information Form
with st.form(key="career_form"):
    st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡∏≠‡∏≤‡∏ä‡∏µ‡∏û")
    education_level = st.selectbox(
        "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤", 
        ("‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡∏≠‡∏ô‡∏ï‡πâ‡∏ô", "‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡∏≠‡∏ô‡∏õ‡∏•‡∏≤‡∏¢", "‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ", "‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÇ‡∏ó", "‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÄ‡∏≠‡∏Å", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ")
    )
    major = st.text_input("‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏ô‡πÉ‡∏à")
    skills = st.multiselect(
        "‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß", 
        ("‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°", "‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£", "‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö", "‡∏†‡∏≤‡∏©‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®", "‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ")
    )
    interests = st.multiselect(
        "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö‡∏ó‡∏≥", 
        ("‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠", "‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏µ‡∏¨‡∏≤", "‡∏ß‡∏≤‡∏î‡∏†‡∏≤‡∏û", "‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°", "‡∏î‡∏ô‡∏ï‡∏£‡∏µ/‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á", "‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß", "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏•‡πá‡∏≠‡∏Å", "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏™‡∏±‡∏á‡∏Ñ‡∏°", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ")
    )
    personality = st.multiselect(
        "‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û‡∏Ñ‡∏£‡πà‡∏≤‡∏ß ‡πÜ", 
        ("‡∏£‡πà‡∏≤‡πÄ‡∏£‡∏¥‡∏á", "‡πÉ‡∏à‡πÄ‡∏¢‡πá‡∏ô", "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå", "‡∏ä‡∏≠‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå", "‡∏Å‡∏•‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡∏Å", "‡∏≠‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß", "‡∏ä‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥", "‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏±‡∏ß")
    )
    dream_career = st.text_input("‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÉ‡∏ô‡∏ù‡∏±‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)")
    
    submitted = st.form_submit_button("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥")

if submitted:
    # Display entered information
    st.subheader("‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
    st.write(f"- ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤: **{education_level}**")
    st.write(f"- ‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô/‡∏™‡∏ô‡πÉ‡∏à: **{major or '-'}**")
    st.write(f"- ‡∏ó‡∏±‡∏Å‡∏©‡∏∞: **{', '.join(skills) if skills else '-'}**")
    st.write(f"- ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à: **{', '.join(interests) if interests else '-'}**")
    st.write(f"- ‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û: **{', '.join(personality) if personality else '-'}**")
    st.write(f"- ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÉ‡∏ô‡∏ù‡∏±‡∏ô: **{dream_career or '-'}**")
    
    # Prepare prompt for ChatGPT
    prompt = (
        f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ {education_level}, ‡∏™‡∏≤‡∏Ç‡∏≤ {major}, "
        f"‡∏ó‡∏±‡∏Å‡∏©‡∏∞ {', '.join(skills)}, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à {', '.join(interests)}, ‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û {', '.join(personality)}, "
        f"‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÉ‡∏ô‡∏ù‡∏±‡∏ô {dream_career}. "
        "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°"
    )
    api_key = st.session_state.get("openai_api_key", "")
    
    if api_key:
        try:
            import openai
            openai.api_key = api_key
            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "system", "content": "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏°‡∏≤"},
                    {"role": "user", "content": prompt}
                ]
            )
            advice = response.choices[0].message.content
        except Exception as e:
            advice = f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô OpenAI: {e}"
        st.subheader("‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å ChatGPT")
        st.write(advice)
    else:
        # Simulated ChatGPT response for users without API key
        st.subheader("‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å ChatGPT (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)")
        example_advice = (
            f"‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏î‡∏±‡∏ö{education_level} ‡∏™‡∏≤‡∏Ç‡∏≤{major or '-'} "
            f"‡∏°‡∏µ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏î‡πâ‡∏≤‡∏ô{', '.join(skills) if skills else '-'} ‡πÅ‡∏•‡∏∞‡∏™‡∏ô‡πÉ‡∏à‡∏î‡πâ‡∏≤‡∏ô{', '.join(interests) if interests else '-'} "
            f"‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏û‡πÇ‡∏î‡∏¢‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏Ñ‡∏∑‡∏≠{', '.join(personality) if personality else '-'}."
            f"{f' ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÉ‡∏ô‡∏ù‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô {dream_career}.' if dream_career else ''} "
            "ChatGPT ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ß‡πà‡∏≤ ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≤‡∏à‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì "
            "‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏™‡∏ô‡πÉ‡∏à‡∏î‡πâ‡∏≤‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° ‡∏≠‡∏≤‡∏à‡∏•‡∏≠‡∏á‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡πÉ‡∏ô‡∏™‡∏≤‡∏¢‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå "
            "‡∏ô‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô"
        )
        st.write(example_advice)
